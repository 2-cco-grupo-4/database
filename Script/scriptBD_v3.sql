DROP DATABASE picme;
TRUNCATE USUARIO;
CREATE DATABASE picme;
USE picme;

-- Criação da tabela Usuario
CREATE TABLE USUARIO (
    ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(50),
    CPF VARCHAR(100),
    EMAIL VARCHAR(100),
    SENHA VARCHAR(100),
    DATA_NASCIMENTO DATE,
    AUTENTICADO BOOL,
    CELULAR VARCHAR(20),
    DATA_CADASTRO DATE,
    TIPO_USUARIO TINYINT,
    TOKEN_SOLICITACAO VARCHAR(100),
    ULTIMO_LOGIN DATE DEFAULT NULL 
);

-- Criação da tabela Tema
CREATE TABLE TEMA (
    ID_TEMA INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(50)
);

-- Criação da tabela TemasUsuario
CREATE TABLE USUARIO_TEMAS (
  ID_USUARIO INT,
  ID_TEMA INT,
  PRIMARY KEY (ID_USUARIO, ID_TEMA),
  FOREIGN KEY (ID_TEMA) REFERENCES TEMA(ID_TEMA),
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

-- Criação da tabela Evento
CREATE TABLE EVENTO (
    ID_EVENTO INT AUTO_INCREMENT PRIMARY KEY,
    DATA_REALIZACAO DATE,
    STATUS_EVENTO VARCHAR(20),
    FK_FOTOGRAFO INT,
    FK_TEMA INT,
    FK_CLIENTE INT,
    VALOR DECIMAL(10, 2),
    FOREIGN KEY (FK_FOTOGRAFO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (FK_TEMA) REFERENCES TEMA(ID_TEMA),
    FOREIGN KEY (FK_CLIENTE) REFERENCES USUARIO(ID_USUARIO)
);

-- Criação da tabela Endereco
CREATE TABLE ENDERECO (
    ID_ENDERECO INT AUTO_INCREMENT PRIMARY KEY,
    ESTADO VARCHAR(50),
    CIDADE VARCHAR(50),
    CEP VARCHAR(10),
    BAIRRO VARCHAR(50),
    LOGRADOURO VARCHAR(100),
    NUMERO VARCHAR(10),
    COMPLEMENTO VARCHAR(100),
    FK_EVENTO INT,
    FOREIGN KEY (FK_EVENTO) REFERENCES EVENTO(ID_EVENTO)
);

-- Criação da tabela Album
CREATE TABLE ALBUM (
    ID_ALBUM INT AUTO_INCREMENT PRIMARY KEY,
    TITULO VARCHAR(100),
    DESCRICAO VARCHAR(100),
    FK_FOTOGRAFO INT,
    FK_TEMA INT,
    FOREIGN KEY (FK_FOTOGRAFO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (FK_TEMA) REFERENCES TEMA(ID_TEMA)
);

-- Criação da tabela Imagem
CREATE TABLE IMAGEM (
    ID_IMAGEM INT AUTO_INCREMENT PRIMARY KEY,
    CAMINHO VARCHAR(500),
    DESCRICAO VARCHAR(100),
    TIPO VARCHAR(5),
    FK_ALBUM INT,
    FOREIGN KEY (FK_ALBUM) REFERENCES ALBUM(ID_ALBUM)
);

-- Tabela Tag
CREATE TABLE TAG (
  ID_TAG INT PRIMARY KEY,
  NOME VARCHAR(100)
);

-- Tabela TagsImagem
CREATE TABLE TAG_IMAGEM (
  ID_IMAGEM INT,
  ID_TAG INT,
  PRIMARY KEY (ID_IMAGEM, ID_TAG),
  FOREIGN KEY (ID_IMAGEM) REFERENCES IMAGEM(ID_IMAGEM),
  FOREIGN KEY (ID_TAG) REFERENCES TAG(ID_TAG)
);

-- Tabela InteressesTags
CREATE TABLE INTERESSE_TAG (
  ID_TAG INT,
  ID_USUARIO INT,
  PRIMARY KEY (ID_TAG, ID_USUARIO),
  FOREIGN KEY (ID_TAG) REFERENCES TAG(ID_TAG),
  FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

-- Tabela LogsPaginasSite
CREATE TABLE LOG_PAGINA_SITE (
  ID_LOG_PAGINA_SITE INT PRIMARY KEY,
  SESSAO_ATIVA INT,
  TEMPO_DURACAO_SESSAO DOUBLE,
  DATA_SESSAO DATE,
  QTD_NOVA_SESSAO INT,
  TOTAL_VIEW_PAGINA INT,
  LOG_PAGINA_SITECOL VARCHAR(45)
);
